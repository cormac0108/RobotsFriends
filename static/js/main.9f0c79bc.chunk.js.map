{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/ErrorBoundary.js","Components/Scroll.js","Components/SearchBox.js","Containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","ErrorBoundary","props","state","hasError","this","children","Component","Scroll","style","overflowY","border","height","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"2OAqBeA,EAlBF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OACI,sBAAKC,UAAU,mDAAf,UAII,qBAAKC,IAAI,aAAcC,IAAG,+BAA0BH,EAA1B,cAC1B,gCACI,qBAAIC,UAAU,KAAd,cAAqBH,EAArB,OACA,oBAAGG,UAAU,KAAb,cAAoBF,EAApB,cCcDK,EAtBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAIf,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACtB,OACI,cAAC,EAAD,CAEHR,GAAIK,EAAOG,GAAGR,GACfF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHXS,SCOCC,G,yDAnBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,qDAYhB,OAAIC,KAAKF,MAAMC,SACJ,0DAEJC,KAAKH,MAAMI,a,GAhBGC,cCQbC,EARA,SAACN,GACZ,OACI,qBAAKO,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKV,EAAMI,YCUJO,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKrB,UAAU,MAAf,SACI,uBAAOA,UAAU,uCACjBsB,KAAK,SACJC,YAAY,gBACbC,SAAUH,OC+DPI,G,yDAnDX,aAAe,IAAD,8BACV,gBAkBHC,eAAiB,SAACC,GACd,OAAO,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAlBjD,EAAKrB,MAAQ,CACTN,OAAQ,GACRyB,YAAa,KAJP,E,gEAUO,IAAD,OAChBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACxB,OAAQgC,S,+BAWhC,IAAD,EAEyBxB,KAAKF,MAA5BN,EAFF,EAEEA,OAAQyB,EAFV,EAEUA,YAETQ,EAAiBjC,EAAOkC,QAAO,SAAAC,GACjC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASZ,EAAYW,kBAGzD,OAASpC,EAAOsC,OAIR,sBAAK1C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWqB,aAAcT,KAAKc,iBAC9B,cAAC,EAAD,UACG,cAAC,EAAD,UACA,cAAC,EAAD,CAAUtB,OAAQiC,WARxB,8C,GAlCKvB,c,OCRlB6B,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.9f0c79bc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nconst Card = ({name, email, id}) => {\r\n    \r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n        \r\n        \r\n            {/* <h1 className=\"f1 tc blue\"> RoboFriends</h1> */}\r\n            <img alt=\"robofriend\"  src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2 className=\"tc\"> {name} </h2>\r\n                <p className=\"tc\"> {email} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Card;\r\n\r\n","import React from 'react';\r\nimport { robots } from '../robots';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n// if(true) {\r\n//     throw new Error(\"Oh NOOOOOO! \")\r\n// }\r\n    return (\r\n        <div>\r\n        {\r\n            robots.map((user, i) => {\r\n        return (\r\n            <Card\r\n         key={i}  \r\n         id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email} />\r\n        )\r\n    })\r\n            \r\n        }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n\r\n\r\n\r\n    \r\n\r\n","import React , {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n//    componentDidCatch(error,info) {\r\n//        return this.setState({hasError: true})\r\n//    } // if this is triggered it will give our h1 tag\r\n    \r\n    render () {\r\n       if (this.state.hasError) {\r\n           return <h1> Oops. That is not good </h1>\r\n       }\r\n       return this.props.children\r\n    }\r\n} \r\n\r\nexport default ErrorBoundary;\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\r\n            {props.children}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;\r\n\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input className=\" tc pa3 ba b--green bg-lighnest-blue\"  \r\n            type=\"search\"\r\n             placeholder=\"Search Robots\"\r\n            onChange={searchChange}\r\n                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport './App.css'\r\nimport ErrorBoundary from '../Components/ErrorBoundary'\r\nimport Scroll from '../Components/Scroll';\r\nimport SearchBox from '../Components/SearchBox';\r\n\r\nimport {robots} from '../robots';\r\nimport { render } from '@testing-library/react';\r\n\r\n\r\n\r\n\r\n// the concept of state for communicating between components. STATE >> props.\r\n// we would use classes for this. remember super and constructor?, because it is an object\r\n// we use this. \r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: \" \"\r\n        }\r\n        \r\n    }\r\n\r\n \r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}))\r\n    }\r\n \r\n\r\n   \r\n\r\n     onSearchChange = (event) => {\r\n         return this.setState({searchfield: event.target.value})\r\n     }\r\n  \r\n\r\n    render() {\r\n        \r\n        const {robots, searchfield} = this.state;\r\n      \r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n\r\n        return (!robots.length) ?\r\n             <h1> Loading</h1>\r\n         : \r\n             (\r\n                <div className=\"tc\"> \r\n                <h1 className=\"f1\" > RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} /> \r\n                <Scroll>\r\n                   <ErrorBoundary>\r\n                   <CardList robots={filteredRobots} />\r\n                   </ErrorBoundary>\r\n                </Scroll>\r\n                \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport App from './Containers/App';\r\n//we are in the same neighbourhood so ./Containers/App\r\n// import registerServiceWorker from './registerServiceWorker';\r\nimport 'tachyons';\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));\r\n\r\n\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n\r\n// the power of react creating our own custom components. capitalize your \r\n// components. JSX - html like syntax in your js. pass props to the hello \r\n// component\r\n"],"sourceRoot":""}